# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#设置库名称


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = ../WeiboSDK/libWeiboLINUX
DIST_COMMON = $(WeiboSDKinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(WeiboSDKincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libWeiboSDK_a_AR = $(AR) $(ARFLAGS)
libWeiboSDK_a_LIBADD =
am__objects_1 = wbCheck.$(OBJEXT) wbOption.$(OBJEXT) \
	wbRequest.$(OBJEXT) wbSession.$(OBJEXT) wbString.$(OBJEXT) \
	wbURL.$(OBJEXT) weibo.$(OBJEXT) strconv.$(OBJEXT) \
	Urlcode.$(OBJEXT) bbiconv.$(OBJEXT) oauth.$(OBJEXT) \
	hash.$(OBJEXT) xmalloc.$(OBJEXT)
am_libWeiboSDK_a_OBJECTS = $(am__objects_1)
libWeiboSDK_a_OBJECTS = $(am_libWeiboSDK_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libWeiboSDK_a_SOURCES)
DIST_SOURCES = $(libWeiboSDK_a_SOURCES)
WeiboSDKincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(WeiboSDKinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@

# 设置安装路径
includedir = $(prefix)/include/libweibo
infodir = @infodir@
install_sh = @install_sh@
libdir = $(prefix)/lib
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LIBRARIES = libWeiboSDK.a
SOURCEDIR = $(top_srcdir)/src
h_source = \
	$(SOURCEDIR)/wbCheck.h\
	$(SOURCEDIR)/wbLog.h\
	$(SOURCEDIR)/wbOption.h\
	$(SOURCEDIR)/wbRequest.h\
	$(SOURCEDIR)/wbSession.h\
	$(SOURCEDIR)/wbString.h\
	$(SOURCEDIR)/wbURL.h\
	$(SOURCEDIR)/weibo.h\
	$(SOURCEDIR)/common/strconv.h\
	$(SOURCEDIR)/common/Urlcode.h\
	$(SOURCEDIR)/common/bbiconv.h\
	$(SOURCEDIR)/oauth/oauth.h\
	$(SOURCEDIR)/oauth/xmalloc.h

cpp_sources = \
	$(SOURCEDIR)/wbCheck.cpp\
	$(SOURCEDIR)/wbOption.cpp\
	$(SOURCEDIR)/wbRequest.cpp\
	$(SOURCEDIR)/wbSession.cpp\
	$(SOURCEDIR)/wbString.cpp\
	$(SOURCEDIR)/wbURL.cpp\
	$(SOURCEDIR)/weibo.cpp\
	$(SOURCEDIR)/common/strconv.cpp\
	$(SOURCEDIR)/common/Urlcode.cpp\
	$(SOURCEDIR)/common/bbiconv.cc\
	$(SOURCEDIR)/oauth/oauth.c\
	$(SOURCEDIR)/oauth/hash.c\
	$(SOURCEDIR)/oauth/xmalloc.c


#关联的头文件
INCLUDES = -I$(top_srcdir)/include

#关联的库

#使用的源文件
libWeiboSDK_a_SOURCES = $(h_sources) $(cpp_sources)
WeiboSDKincludedir = $(includedir)
WeiboSDKinclude_HEADERS = $(SOURCEDIR)/weibo.h
AM_CXXFLAGS = -D_LINUX -DONLY_EPOLL -D_SERVER
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  ../WeiboSDK/libWeiboLINUX/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  ../WeiboSDK/libWeiboLINUX/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libWeiboSDK.a: $(libWeiboSDK_a_OBJECTS) $(libWeiboSDK_a_DEPENDENCIES) 
	-rm -f libWeiboSDK.a
	$(libWeiboSDK_a_AR) libWeiboSDK.a $(libWeiboSDK_a_OBJECTS) $(libWeiboSDK_a_LIBADD)
	$(RANLIB) libWeiboSDK.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Urlcode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bbiconv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/oauth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strconv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wbCheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wbOption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wbRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wbSession.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wbString.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wbURL.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/weibo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmalloc.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

oauth.o: $(SOURCEDIR)/oauth/oauth.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT oauth.o -MD -MP -MF $(DEPDIR)/oauth.Tpo -c -o oauth.o `test -f '$(SOURCEDIR)/oauth/oauth.c' || echo '$(srcdir)/'`$(SOURCEDIR)/oauth/oauth.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/oauth.Tpo $(DEPDIR)/oauth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(SOURCEDIR)/oauth/oauth.c' object='oauth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o oauth.o `test -f '$(SOURCEDIR)/oauth/oauth.c' || echo '$(srcdir)/'`$(SOURCEDIR)/oauth/oauth.c

oauth.obj: $(SOURCEDIR)/oauth/oauth.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT oauth.obj -MD -MP -MF $(DEPDIR)/oauth.Tpo -c -o oauth.obj `if test -f '$(SOURCEDIR)/oauth/oauth.c'; then $(CYGPATH_W) '$(SOURCEDIR)/oauth/oauth.c'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/oauth/oauth.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/oauth.Tpo $(DEPDIR)/oauth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(SOURCEDIR)/oauth/oauth.c' object='oauth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o oauth.obj `if test -f '$(SOURCEDIR)/oauth/oauth.c'; then $(CYGPATH_W) '$(SOURCEDIR)/oauth/oauth.c'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/oauth/oauth.c'; fi`

hash.o: $(SOURCEDIR)/oauth/hash.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hash.o -MD -MP -MF $(DEPDIR)/hash.Tpo -c -o hash.o `test -f '$(SOURCEDIR)/oauth/hash.c' || echo '$(srcdir)/'`$(SOURCEDIR)/oauth/hash.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/hash.Tpo $(DEPDIR)/hash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(SOURCEDIR)/oauth/hash.c' object='hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hash.o `test -f '$(SOURCEDIR)/oauth/hash.c' || echo '$(srcdir)/'`$(SOURCEDIR)/oauth/hash.c

hash.obj: $(SOURCEDIR)/oauth/hash.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hash.obj -MD -MP -MF $(DEPDIR)/hash.Tpo -c -o hash.obj `if test -f '$(SOURCEDIR)/oauth/hash.c'; then $(CYGPATH_W) '$(SOURCEDIR)/oauth/hash.c'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/oauth/hash.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/hash.Tpo $(DEPDIR)/hash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(SOURCEDIR)/oauth/hash.c' object='hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hash.obj `if test -f '$(SOURCEDIR)/oauth/hash.c'; then $(CYGPATH_W) '$(SOURCEDIR)/oauth/hash.c'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/oauth/hash.c'; fi`

xmalloc.o: $(SOURCEDIR)/oauth/xmalloc.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xmalloc.o -MD -MP -MF $(DEPDIR)/xmalloc.Tpo -c -o xmalloc.o `test -f '$(SOURCEDIR)/oauth/xmalloc.c' || echo '$(srcdir)/'`$(SOURCEDIR)/oauth/xmalloc.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/xmalloc.Tpo $(DEPDIR)/xmalloc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(SOURCEDIR)/oauth/xmalloc.c' object='xmalloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xmalloc.o `test -f '$(SOURCEDIR)/oauth/xmalloc.c' || echo '$(srcdir)/'`$(SOURCEDIR)/oauth/xmalloc.c

xmalloc.obj: $(SOURCEDIR)/oauth/xmalloc.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xmalloc.obj -MD -MP -MF $(DEPDIR)/xmalloc.Tpo -c -o xmalloc.obj `if test -f '$(SOURCEDIR)/oauth/xmalloc.c'; then $(CYGPATH_W) '$(SOURCEDIR)/oauth/xmalloc.c'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/oauth/xmalloc.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/xmalloc.Tpo $(DEPDIR)/xmalloc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(SOURCEDIR)/oauth/xmalloc.c' object='xmalloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xmalloc.obj `if test -f '$(SOURCEDIR)/oauth/xmalloc.c'; then $(CYGPATH_W) '$(SOURCEDIR)/oauth/xmalloc.c'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/oauth/xmalloc.c'; fi`

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

wbCheck.o: $(SOURCEDIR)/wbCheck.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbCheck.o -MD -MP -MF $(DEPDIR)/wbCheck.Tpo -c -o wbCheck.o `test -f '$(SOURCEDIR)/wbCheck.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbCheck.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbCheck.Tpo $(DEPDIR)/wbCheck.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbCheck.cpp' object='wbCheck.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbCheck.o `test -f '$(SOURCEDIR)/wbCheck.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbCheck.cpp

wbCheck.obj: $(SOURCEDIR)/wbCheck.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbCheck.obj -MD -MP -MF $(DEPDIR)/wbCheck.Tpo -c -o wbCheck.obj `if test -f '$(SOURCEDIR)/wbCheck.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbCheck.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbCheck.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbCheck.Tpo $(DEPDIR)/wbCheck.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbCheck.cpp' object='wbCheck.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbCheck.obj `if test -f '$(SOURCEDIR)/wbCheck.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbCheck.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbCheck.cpp'; fi`

wbOption.o: $(SOURCEDIR)/wbOption.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbOption.o -MD -MP -MF $(DEPDIR)/wbOption.Tpo -c -o wbOption.o `test -f '$(SOURCEDIR)/wbOption.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbOption.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbOption.Tpo $(DEPDIR)/wbOption.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbOption.cpp' object='wbOption.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbOption.o `test -f '$(SOURCEDIR)/wbOption.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbOption.cpp

wbOption.obj: $(SOURCEDIR)/wbOption.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbOption.obj -MD -MP -MF $(DEPDIR)/wbOption.Tpo -c -o wbOption.obj `if test -f '$(SOURCEDIR)/wbOption.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbOption.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbOption.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbOption.Tpo $(DEPDIR)/wbOption.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbOption.cpp' object='wbOption.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbOption.obj `if test -f '$(SOURCEDIR)/wbOption.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbOption.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbOption.cpp'; fi`

wbRequest.o: $(SOURCEDIR)/wbRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbRequest.o -MD -MP -MF $(DEPDIR)/wbRequest.Tpo -c -o wbRequest.o `test -f '$(SOURCEDIR)/wbRequest.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbRequest.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbRequest.Tpo $(DEPDIR)/wbRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbRequest.cpp' object='wbRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbRequest.o `test -f '$(SOURCEDIR)/wbRequest.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbRequest.cpp

wbRequest.obj: $(SOURCEDIR)/wbRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbRequest.obj -MD -MP -MF $(DEPDIR)/wbRequest.Tpo -c -o wbRequest.obj `if test -f '$(SOURCEDIR)/wbRequest.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbRequest.Tpo $(DEPDIR)/wbRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbRequest.cpp' object='wbRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbRequest.obj `if test -f '$(SOURCEDIR)/wbRequest.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbRequest.cpp'; fi`

wbSession.o: $(SOURCEDIR)/wbSession.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbSession.o -MD -MP -MF $(DEPDIR)/wbSession.Tpo -c -o wbSession.o `test -f '$(SOURCEDIR)/wbSession.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbSession.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbSession.Tpo $(DEPDIR)/wbSession.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbSession.cpp' object='wbSession.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbSession.o `test -f '$(SOURCEDIR)/wbSession.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbSession.cpp

wbSession.obj: $(SOURCEDIR)/wbSession.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbSession.obj -MD -MP -MF $(DEPDIR)/wbSession.Tpo -c -o wbSession.obj `if test -f '$(SOURCEDIR)/wbSession.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbSession.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbSession.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbSession.Tpo $(DEPDIR)/wbSession.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbSession.cpp' object='wbSession.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbSession.obj `if test -f '$(SOURCEDIR)/wbSession.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbSession.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbSession.cpp'; fi`

wbString.o: $(SOURCEDIR)/wbString.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbString.o -MD -MP -MF $(DEPDIR)/wbString.Tpo -c -o wbString.o `test -f '$(SOURCEDIR)/wbString.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbString.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbString.Tpo $(DEPDIR)/wbString.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbString.cpp' object='wbString.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbString.o `test -f '$(SOURCEDIR)/wbString.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbString.cpp

wbString.obj: $(SOURCEDIR)/wbString.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbString.obj -MD -MP -MF $(DEPDIR)/wbString.Tpo -c -o wbString.obj `if test -f '$(SOURCEDIR)/wbString.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbString.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbString.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbString.Tpo $(DEPDIR)/wbString.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbString.cpp' object='wbString.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbString.obj `if test -f '$(SOURCEDIR)/wbString.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbString.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbString.cpp'; fi`

wbURL.o: $(SOURCEDIR)/wbURL.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbURL.o -MD -MP -MF $(DEPDIR)/wbURL.Tpo -c -o wbURL.o `test -f '$(SOURCEDIR)/wbURL.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbURL.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbURL.Tpo $(DEPDIR)/wbURL.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbURL.cpp' object='wbURL.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbURL.o `test -f '$(SOURCEDIR)/wbURL.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/wbURL.cpp

wbURL.obj: $(SOURCEDIR)/wbURL.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wbURL.obj -MD -MP -MF $(DEPDIR)/wbURL.Tpo -c -o wbURL.obj `if test -f '$(SOURCEDIR)/wbURL.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbURL.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbURL.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wbURL.Tpo $(DEPDIR)/wbURL.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/wbURL.cpp' object='wbURL.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wbURL.obj `if test -f '$(SOURCEDIR)/wbURL.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/wbURL.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/wbURL.cpp'; fi`

weibo.o: $(SOURCEDIR)/weibo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weibo.o -MD -MP -MF $(DEPDIR)/weibo.Tpo -c -o weibo.o `test -f '$(SOURCEDIR)/weibo.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/weibo.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/weibo.Tpo $(DEPDIR)/weibo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/weibo.cpp' object='weibo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weibo.o `test -f '$(SOURCEDIR)/weibo.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/weibo.cpp

weibo.obj: $(SOURCEDIR)/weibo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weibo.obj -MD -MP -MF $(DEPDIR)/weibo.Tpo -c -o weibo.obj `if test -f '$(SOURCEDIR)/weibo.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/weibo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/weibo.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/weibo.Tpo $(DEPDIR)/weibo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/weibo.cpp' object='weibo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weibo.obj `if test -f '$(SOURCEDIR)/weibo.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/weibo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/weibo.cpp'; fi`

strconv.o: $(SOURCEDIR)/common/strconv.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT strconv.o -MD -MP -MF $(DEPDIR)/strconv.Tpo -c -o strconv.o `test -f '$(SOURCEDIR)/common/strconv.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/common/strconv.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/strconv.Tpo $(DEPDIR)/strconv.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/common/strconv.cpp' object='strconv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o strconv.o `test -f '$(SOURCEDIR)/common/strconv.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/common/strconv.cpp

strconv.obj: $(SOURCEDIR)/common/strconv.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT strconv.obj -MD -MP -MF $(DEPDIR)/strconv.Tpo -c -o strconv.obj `if test -f '$(SOURCEDIR)/common/strconv.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/common/strconv.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/common/strconv.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/strconv.Tpo $(DEPDIR)/strconv.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/common/strconv.cpp' object='strconv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o strconv.obj `if test -f '$(SOURCEDIR)/common/strconv.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/common/strconv.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/common/strconv.cpp'; fi`

Urlcode.o: $(SOURCEDIR)/common/Urlcode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Urlcode.o -MD -MP -MF $(DEPDIR)/Urlcode.Tpo -c -o Urlcode.o `test -f '$(SOURCEDIR)/common/Urlcode.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/common/Urlcode.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Urlcode.Tpo $(DEPDIR)/Urlcode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/common/Urlcode.cpp' object='Urlcode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Urlcode.o `test -f '$(SOURCEDIR)/common/Urlcode.cpp' || echo '$(srcdir)/'`$(SOURCEDIR)/common/Urlcode.cpp

Urlcode.obj: $(SOURCEDIR)/common/Urlcode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Urlcode.obj -MD -MP -MF $(DEPDIR)/Urlcode.Tpo -c -o Urlcode.obj `if test -f '$(SOURCEDIR)/common/Urlcode.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/common/Urlcode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/common/Urlcode.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Urlcode.Tpo $(DEPDIR)/Urlcode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/common/Urlcode.cpp' object='Urlcode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Urlcode.obj `if test -f '$(SOURCEDIR)/common/Urlcode.cpp'; then $(CYGPATH_W) '$(SOURCEDIR)/common/Urlcode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/common/Urlcode.cpp'; fi`

bbiconv.o: $(SOURCEDIR)/common/bbiconv.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bbiconv.o -MD -MP -MF $(DEPDIR)/bbiconv.Tpo -c -o bbiconv.o `test -f '$(SOURCEDIR)/common/bbiconv.cc' || echo '$(srcdir)/'`$(SOURCEDIR)/common/bbiconv.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bbiconv.Tpo $(DEPDIR)/bbiconv.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/common/bbiconv.cc' object='bbiconv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bbiconv.o `test -f '$(SOURCEDIR)/common/bbiconv.cc' || echo '$(srcdir)/'`$(SOURCEDIR)/common/bbiconv.cc

bbiconv.obj: $(SOURCEDIR)/common/bbiconv.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bbiconv.obj -MD -MP -MF $(DEPDIR)/bbiconv.Tpo -c -o bbiconv.obj `if test -f '$(SOURCEDIR)/common/bbiconv.cc'; then $(CYGPATH_W) '$(SOURCEDIR)/common/bbiconv.cc'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/common/bbiconv.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bbiconv.Tpo $(DEPDIR)/bbiconv.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SOURCEDIR)/common/bbiconv.cc' object='bbiconv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bbiconv.obj `if test -f '$(SOURCEDIR)/common/bbiconv.cc'; then $(CYGPATH_W) '$(SOURCEDIR)/common/bbiconv.cc'; else $(CYGPATH_W) '$(srcdir)/$(SOURCEDIR)/common/bbiconv.cc'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-WeiboSDKincludeHEADERS: $(WeiboSDKinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(WeiboSDKincludedir)" || $(MKDIR_P) "$(DESTDIR)$(WeiboSDKincludedir)"
	@list='$(WeiboSDKinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(WeiboSDKincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(WeiboSDKincludedir)/$$f'"; \
	  $(WeiboSDKincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(WeiboSDKincludedir)/$$f"; \
	done

uninstall-WeiboSDKincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(WeiboSDKinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(WeiboSDKincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(WeiboSDKincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(WeiboSDKincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-WeiboSDKincludeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-WeiboSDKincludeHEADERS uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-WeiboSDKincludeHEADERS install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-WeiboSDKincludeHEADERS uninstall-am \
	uninstall-libLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
